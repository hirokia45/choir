import { previewData } from "next/headers";
import { createClient, linkResolver } from "@/prismicio";
import * as prismicH from "@prismicio/helpers";
import { GetStaticPropsContext } from "next";
import { FC } from "react";
import { ProjectDocument } from "@/.slicemachine/prismicio";
import Head from "next/head";
import { Layout } from "@/components/layout/Layout";
import { SliceZone } from "@prismicio/react";
import { components } from "@/slices";

const Project: FC<{ pageData: ProjectDocument }> = ({ pageData }) => {
  return (
    <>
      <Head>
        <title>{pageData.data.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Layout title={pageData.data.title!}>
        <main className="">
          <SliceZone slices={pageData.data.slices} components={components} />
        </main>
      </Layout>
    </>
  );
};

// eslint-disable-next-line react-hooks/rules-of-hooks
export const getStaticProps = async (props: GetStaticPropsContext) => {
  const client = createClient({ previewData });

  const page = await client.getByUID("project", props.params!.uid as string);

  return {
    props: {
      pageData: page,
    },
  };
};

// eslint-disable-next-line react-hooks/rules-of-hooks
export const getStaticPaths = async ({}) => {
  const client = createClient();

  const pages = await client.getAllByType("project");

  return {
    paths: pages.map((page) => prismicH.asLink(page, linkResolver)),
    fallback: false,
  };
};

export default Project;
